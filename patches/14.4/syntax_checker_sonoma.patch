diff --git a/tools/lldbmacros/core/syntax_checker.py b/tools/lldbmacros/core/syntax_checker.py
index 05aba3b4..2233be9d 100755
--- a/tools/lldbmacros/core/syntax_checker.py
+++ b/tools/lldbmacros/core/syntax_checker.py
@@ -1,7 +1,6 @@
 #!/usr/bin/env python3
 from __future__ import absolute_import, print_function

-
 helpdoc = """
 A simple utility that verifies the syntax for python scripts.
 The checks it does are :
@@ -12,9 +11,6 @@ Usage:
 """
 import sys
 import os
-import re
-
-tabs_search_rex = re.compile("^\s*\t+",re.MULTILINE|re.DOTALL)

 def find_non_ascii(s):
     for c in s:
@@ -34,20 +30,6 @@ if __name__ == "__main__":
             print("Note: %s is not a valid python file. Skipping." % fname)
             continue
         fh = open(fname)
-        strdata = fh.readlines()
-        lineno = 0
-        syntax_fail = False
-        for linedata in strdata:
-            lineno += 1
-            if len(tabs_search_rex.findall(linedata)) > 0 :
-                print("Error: Found a TAB character at %s:%d" % (fname, lineno), file=sys.stderr)
-                syntax_fail = True
-        if find_non_ascii(linedata):
-            print("Error: Found a non ascii character at %s:%d" % (fname, lineno), file=sys.stderr)
-            syntax_fail = True
-        if syntax_fail:
-            print("Error: Syntax check failed. Please fix the errors and try again.", file=sys.stderr)
-            sys.exit(1)
         #now check for error in compilation
         try:
             with open(fname, 'r') as file:
