diff --git a/bsd/skywalk/packet/packet_kern.c b/bsd/skywalk/packet/packet_kern.c
index 7dbbdf88..04d6de7a 100644
--- a/bsd/skywalk/packet/packet_kern.c
+++ b/bsd/skywalk/packet/packet_kern.c
@@ -287,6 +287,37 @@ kern_packet_get_inet_checksum(const kern_packet_t ph, uint16_t *start,
 	return __packet_get_inet_checksum(ph, start, val, tx);
 }

+errno_t
+kern_packet_set_fpd_command(const kern_packet_t ph,
+							uint8_t cmd)
+{
+	errno_t result;
+
+	if (cmd > 7)
+		return 22;
+	result = 0;
+	PKT_ADDR(ph)->pkt_fpd_metadata |= ((cmd & 7) << 6) | 0x8000;
+	return result;
+}
+
+errno_t
+kern_packet_set_fpd_sequence_number(const kern_packet_t ph,
+									uint32_t seq_num)
+{
+	PKT_ADDR(ph)->pkt_fpd_seqnum = seq_num;
+	PKT_ADDR(ph)->pkt_fpd_metadata |= 0x8000;
+	return 0;
+}
+
+errno_t
+kern_packet_set_fpd_context_id(const kern_packet_t ph,
+							   uint16_t ctx_id)
+{
+	PKT_ADDR(ph)->pkt_fpd_metadata |= ctx_id & 0x3F | 0x8000;
+	return 0;
+}
+
+
 void
 kern_packet_set_flow_uuid(const kern_packet_t ph, const uuid_t flow_uuid)
 {
@@ -955,24 +986,6 @@ kern_packet_copy_bytes(kern_packet_t pkt, size_t off, size_t len, void* out_data
 	return 0;
 }

-errno_t
-kern_packet_set_fpd_sequence_number(__unused const kern_packet_t ph, __unused uint32_t seq_num)
-{
-	return 0;
-}
-
-errno_t
-kern_packet_set_fpd_context_id(__unused const kern_packet_t ph, __unused uint16_t ctx_id)
-{
-	return 0;
-}
-
-errno_t
-kern_packet_set_fpd_command(__unused const kern_packet_t ph, __unused uint8_t cmd)
-{
-	return 0;
-}
-
 errno_t
 kern_packet_get_flowid(const kern_packet_t ph, packet_flowid_t *pflowid)
 {
diff --git a/bsd/skywalk/packet/packet_var.h b/bsd/skywalk/packet/packet_var.h
index 6474f5f0..cf37cb09 100644
--- a/bsd/skywalk/packet/packet_var.h
+++ b/bsd/skywalk/packet/packet_var.h
@@ -441,7 +441,8 @@ struct __kern_packet {

 	void *      pkt_priv;   /* free to use for every layer */

-
+	uint32_t               pkt_fpd_seqnum;   // @ 0xd0
+	uint16_t               pkt_fpd_metadata; // @ 0xd4
 	/*
 	 * Kernel specific.
 	 *
